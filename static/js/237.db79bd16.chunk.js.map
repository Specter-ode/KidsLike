{"version":3,"file":"static/js/237.db79bd16.chunk.js","mappings":"iyBAgCA,EAxBsC,SAAH,GAAsB,IAAhBA,EAAQ,EAARA,SAC/BC,GAASC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAA3CH,KACR,OACE,iBAAKI,UAAU,4EAA2E,WACxF,gBAAKA,UAAU,sCAAqC,UAClD,gBACEA,UAAU,gBACVC,IAAKC,EACLC,OAAM,UAAKD,EAAa,gBAAQE,EAAa,OAC7CC,IAAI,kDACJC,MAAO,SAGX,iBAAKN,UAAU,oBAAmB,WAChC,gBAAIA,UAAU,wGAAuG,UAClHO,EAAKX,GAAMY,WACZ,kBAAM,IAAED,EAAKX,GAAMa,aAEpBd,OAIT,C,mEC4BA,IArDgD,SAAH,GActC,IAbLe,EAAK,EAALA,MACAC,EAAK,EAALA,MACAC,EAAI,EAAJA,KACAC,EAAK,EAALA,MACAC,EAAQ,EAARA,SAAS,EAAD,EACRC,SAAAA,OAAQ,OAAO,EACfC,EAAI,EAAJA,KAAK,EAAD,EACJC,YAAAA,OAAW,MAAG,IAAG,EACjBC,EAAK,EAALA,MACAC,EAAO,EAAPA,QAAQ,EAAD,EACPC,UAAAA,OAAS,MAAG,EAAC,MACbC,UAAAA,OAAS,MAAG,GAAE,EACdC,EAAM,EAANA,OAEMC,GAAKC,EAAAA,EAAAA,UAAQ,kBAAMC,EAAAA,EAAAA,KAAQ,GAAE,IACnC,GAAkCC,EAAAA,EAAAA,WAAkB,GAAM,eAAnDC,EAAS,KAAEC,EAAY,KAU9B,OACE,iBAAK5B,UAAU,sBAAqB,WAClC,kBACEA,UAAU,QACVuB,GAAIA,EACJX,KAAMA,EACNC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVE,YAAaA,EACbD,KAAMA,EACNE,MAAOA,EACPC,QAASA,EACTC,UAAWA,EACXC,UAAWA,EACXQ,QAvBc,WAClBD,GAAa,EACf,EAsBME,OApBa,WACjBF,GAAa,EACf,KAoBI,kBAAO5B,UAAU,QAAQ+B,QAASR,EAAG,SAClCb,KAEH,iBAAMV,UAAU,QAAO,UAAG2B,GAAahB,KACvC,iBAAMX,UAAU,SAAQ,SAAEsB,MAGhC,C,ynBCpDQU,EAA0BC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAA1BD,sBA6BR,EA3B6B,WAC3B,IAAQpC,GAASC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAA3CH,KACR,OACE,iBAAKI,UAAU,YAAW,WACxB,eAAIA,UAAU,kDAAiD,SAAEO,EAAKX,GAAMsC,cAC5E,iBAAKlC,UAAU,uBAAsB,WACnC,cACEmC,KAAI,UAAKH,EAAqB,gBAC9BhC,UAAU,qHAAoH,UAE9H,gBAAKM,MAAM,KAAK8B,OAAO,KAAI,UACzB,gBAAKD,KAAME,EAAAA,EAAS,iBAGxB,cACEF,KAAI,UAAKH,EAAqB,kBAC9BhC,UAAU,qHAAoH,UAE9H,gBAAKM,MAAM,KAAK8B,OAAO,KAAI,UACzB,gBAAKD,KAAME,EAAAA,EAAS,uBAMhC,C,0qFCnBMC,EAAe,CACnBC,SAAU,GACVC,MAAO,GACPC,SAAU,IAsEZ,EAnE+B,WAC7B,OAA0Bf,EAAAA,EAAAA,UAAiBY,GAAa,eAAjDI,EAAK,KAAEC,EAAQ,KACtB,GAAgDjB,EAAAA,EAAAA,UAAiBY,GAAa,eAAvEM,EAAgB,KAAEC,EAAmB,KACpCjD,GAASC,EAAAA,EAAAA,IAAe,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAA3CH,KACFkD,GAAWC,EAAAA,EAAAA,KACXC,EAAe,SAACC,GACpB,MAA2CA,EAAEC,OAArCrC,EAAK,EAALA,MAAOD,EAAI,EAAJA,KAAMuC,EAAiB,EAAjBA,kBACrBN,GAAoB,SAAAO,GAAS,yBACxBA,GAAS,cACXxC,EAAOuC,GAAiB,IAE3BR,GAAS,SAAAS,GAAS,yBACbA,GAAS,cACXxC,EAAOC,GAAK,GAEjB,EAQQ0B,EAA8BG,EAA9BH,SAAUC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAEzB,OACE,kBAAMY,SATW,SAACJ,GAClBA,EAAEK,iBACFR,GAASS,EAAAA,EAAAA,IAAmBb,IAC5BC,EAASL,EACX,EAK6B,WACzB,eAAItC,UAAU,sDAAqD,SAAEO,EAAKX,GAAM4D,iBAChF,SAACC,EAAA,EAAa,CACZ3C,SAAUkC,EACVnC,MAAO0B,EACP3B,KAAK,WACLI,KAAK,OACLL,MAAOiC,EAAiBL,SACxBjB,OAAQf,EAAKX,GAAM8D,WACnBxC,MAAOX,EAAKX,GAAM+D,UAClBjD,MAAOH,EAAKX,GAAMgE,aAEpB,SAACH,EAAA,EAAa,CACZ3C,SAAUkC,EACVnC,MAAO2B,EACP5B,KAAK,QACLI,KAAK,QACLG,QAAQ,sIACRR,MAAOiC,EAAiBJ,MACxBlB,OAAO,oBACPJ,MAAM,oBACNR,MAAOH,EAAKX,GAAMiE,cAEpB,SAACJ,EAAA,EAAa,CACZ3C,SAAUkC,EACVnC,MAAO4B,EACP7B,KAAK,WACLI,KAAK,WACLI,UAAW,EACXT,MAAOiC,EAAiBH,SACxBnB,OAAQf,EAAKX,GAAMkE,eACnB5C,MAAOX,EAAKX,GAAMmE,cAClBrD,MAAOH,EAAKX,GAAMoE,iBAEpB,mBAAQhD,KAAK,SAAShB,UAAU,aAAY,SACzCO,EAAKX,GAAMqE,aAIpB,E,UCpDA,EAvB+B,WAC7B,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAoBvE,EAAAA,EAAAA,IAAe,SAAA6C,GAAK,OAAIA,EAAM3C,IAAI,IAAtDqE,gBAOR,OANAC,EAAAA,EAAAA,YAAU,WACJD,GACFF,EAAS,SAEb,GAAG,CAACA,EAAUE,KAGZ,oBAASpE,UAAU,+IAA8I,UAC/J,SAACsE,EAAA,EAAS,WACR,SAACC,EAAA,EAAW,WACV,iBAAKvE,UAAU,yGAAwG,WACrH,SAACwE,EAAA,EAAU,KACX,SAAC,EAAY,YAMzB,C","sources":["components/AuthContent/AuthContent.tsx","components/FormTextField/FormTextField.tsx","components/SocialAuth/SocialAuth.tsx","components/RegisterForm/RegisterForm.tsx","pages/RegisterPage/RegisterPage.tsx"],"sourcesContent":["import authDesktop1x from '../../assets/img/auth/auth-desktop-1x.png';\nimport authDesktop2x from '../../assets/img/auth/auth-desktop-2x.png';\nimport { useAppSelector } from '../../redux/hooks';\nimport text from './text.json';\n\ninterface IProps {\n  children: React.ReactNode;\n}\nconst AuthContent: React.FC<IProps> = ({ children }) => {\n  const { lang } = useAppSelector(store => store.auth);\n  return (\n    <div className=\"sLaptop:flex sLaptop:justify-between sLaptop:pr-[120px] sLaptop:pl-[16px]\">\n      <div className=\"hidden sLaptop:block sLaptop:h-full\">\n        <img\n          className=\"h-full w-full\"\n          src={authDesktop1x}\n          srcSet={`${authDesktop1x} 1x, ${authDesktop2x} 2x`}\n          alt=\"Welcome. Parent and kids make homework together\"\n          width={580}\n        />\n      </div>\n      <div className=\"sLaptop:mt-[20px]\">\n        <h2 className=\"mb-[32px] text-center text-[18px] font-semibold text-main-color sTablet:text-[28px] sLaptop:text-left\">\n          {text[lang].makeTasks}\n          <br /> {text[lang].getAwards}\n        </h2>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default AuthContent;\n","//  FormTextField.tsx\nimport { useMemo, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { IFormTextField } from '../../types/formTextField-types';\n\nconst FormTextField: React.FC<IFormTextField> = ({\n  label,\n  error,\n  name,\n  value,\n  onChange,\n  required = true,\n  type,\n  placeholder = ' ',\n  title,\n  pattern,\n  minLength = 3,\n  maxLength = 40,\n  helper,\n}) => {\n  const id = useMemo(() => nanoid(), []);\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n\n  return (\n    <div className=\"relative  mb-[12px]\">\n      <input\n        className=\"input\"\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required={required}\n        placeholder={placeholder}\n        type={type}\n        title={title}\n        pattern={pattern}\n        minLength={minLength}\n        maxLength={maxLength}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <span className=\"error\">{!isFocused && error}</span>\n      <span className=\"helper\">{helper}</span>\n    </div>\n  );\n};\n\nexport default FormTextField;\n","import sprite from '../../assets/icons/sprite.svg';\nimport { useAppSelector } from '../../redux/hooks';\nimport text from './text.json';\n\nconst { REACT_APP_BACKEND_URL } = process.env;\n\nconst SocialAuth: React.FC = () => {\n  const { lang } = useAppSelector(store => store.auth);\n  return (\n    <div className=\"mb-[20px]\">\n      <h3 className=\"mb-[20px] text-xs font-normal text-second-color\">{text[lang].socialAuth}</h3>\n      <div className=\"flex justify-between\">\n        <a\n          href={`${REACT_APP_BACKEND_URL}/auth/google`}\n          className=\" flex h-[42px] w-[45%] items-center justify-center rounded-[6px] border-gray-300 shadow-base hover:bg-accent-color\"\n        >\n          <svg width=\"85\" height=\"20\">\n            <use href={sprite + '#google'}></use>\n          </svg>\n        </a>\n        <a\n          href={`${REACT_APP_BACKEND_URL}/auth/facebook`}\n          className=\" flex h-[42px] w-[45%] items-center justify-center rounded-[6px] border-gray-300 shadow-base hover:bg-accent-color\"\n        >\n          <svg width=\"85\" height=\"20\">\n            <use href={sprite + '#facebook'}></use>\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialAuth;\n","import React, { useState } from 'react';\nimport { handleRegistration } from '../../redux/auth/auth-operations';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport FormTextField from '../FormTextField/FormTextField';\nimport text from './text.json';\n\ninterface IState {\n  username: string;\n  email: string;\n  password: string;\n}\n\nconst initialState = {\n  username: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm: React.FC = () => {\n  const [state, setState] = useState<IState>(initialState);\n  const [validationErrors, setValidationErrors] = useState<IState>(initialState);\n  const { lang } = useAppSelector(store => store.auth);\n  const dispatch = useAppDispatch();\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value, name, validationMessage } = e.target;\n    setValidationErrors(prevState => ({\n      ...prevState,\n      [name]: validationMessage,\n    }));\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleAuth = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    dispatch(handleRegistration(state));\n    setState(initialState);\n  };\n\n  const { username, email, password } = state;\n\n  return (\n    <form onSubmit={handleAuth}>\n      <h3 className=\"mb-[20px] text-[12px] font-normal text-second-color\">{text[lang].notSocialAuth}</h3>\n      <FormTextField\n        onChange={handleChange}\n        value={username}\n        name=\"username\"\n        type=\"text\"\n        error={validationErrors.username}\n        helper={text[lang].nameHelper}\n        title={text[lang].nameTitle}\n        label={text[lang].nameLabel}\n      />\n      <FormTextField\n        onChange={handleChange}\n        value={email}\n        name=\"email\"\n        type=\"email\"\n        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n        error={validationErrors.email}\n        helper=\"example@gmail.com\"\n        title=\"example@gmail.com\"\n        label={text[lang].emailLabel}\n      />\n      <FormTextField\n        onChange={handleChange}\n        value={password}\n        name=\"password\"\n        type=\"password\"\n        minLength={8}\n        error={validationErrors.password}\n        helper={text[lang].passwordHelper}\n        title={text[lang].passwordTitle}\n        label={text[lang].passwordLabel}\n      />\n      <button type=\"submit\" className=\"btn w-full\">\n        {text[lang].register}\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthContent from '../../components/AuthContent/AuthContent';\nimport Container from '../../components/Container/Container';\nimport RegisterForm from '../../components/RegisterForm/RegisterForm';\nimport SocialAuth from '../../components/SocialAuth/SocialAuth';\nimport { useAppSelector } from '../../redux/hooks';\n\nconst RegisterPage: React.FC = () => {\n  const navigate = useNavigate();\n  const { redirectToLogin } = useAppSelector(state => state.auth);\n  useEffect(() => {\n    if (redirectToLogin) {\n      navigate('/login');\n    }\n  }, [navigate, redirectToLogin]);\n\n  return (\n    <section className=\"min-h-[calc(100vh-130px)] w-full py-[40px] sTablet:min-h-[calc(100vh-335px)] sLaptop:min-h-[calc(100vh-64px)] sLaptop:pb-0 sLaptop:pt-[20px]\">\n      <Container>\n        <AuthContent>\n          <div className=\"sTablet:mx-auto sTablet:w-[394px] sTablet:px-[32px] sTablet:py-[40px] sTablet:shadow-base sLaptop:mx-0\">\n            <SocialAuth />\n            <RegisterForm />\n          </div>\n        </AuthContent>\n      </Container>\n    </section>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["children","lang","useAppSelector","store","auth","className","src","authDesktop1x","srcSet","authDesktop2x","alt","width","text","makeTasks","getAwards","label","error","name","value","onChange","required","type","placeholder","title","pattern","minLength","maxLength","helper","id","useMemo","nanoid","useState","isFocused","setIsFocused","onFocus","onBlur","htmlFor","REACT_APP_BACKEND_URL","process","socialAuth","href","height","sprite","initialState","username","email","password","state","setState","validationErrors","setValidationErrors","dispatch","useAppDispatch","handleChange","e","target","validationMessage","prevState","onSubmit","preventDefault","handleRegistration","notSocialAuth","FormTextField","nameHelper","nameTitle","nameLabel","emailLabel","passwordHelper","passwordTitle","passwordLabel","register","navigate","useNavigate","redirectToLogin","useEffect","Container","AuthContent","SocialAuth"],"sourceRoot":""}