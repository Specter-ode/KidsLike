{"version":3,"file":"static/js/187.36165ba4.chunk.js","mappings":"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","sources":["components/AuthContent/AuthContent.tsx","components/FormTextField/FormTextField.tsx","components/SocialAuth/SocialAuth.tsx","components/LoginForm/LoginForm.tsx","pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import authDesktop1x from '../../assets/img/auth/auth-desktop-1x.png';\nimport authDesktop2x from '../../assets/img/auth/auth-desktop-2x.png';\nimport { useAppSelector } from '../../redux/hooks';\nimport useWindowDimensions from '../../services/hooks/useDimensions';\nimport text from './text.json';\n\ninterface IProps {\n  children: React.ReactNode;\n}\nconst AuthContent: React.FC<IProps> = ({ children }) => {\n  const { width } = useWindowDimensions();\n  const { lang } = useAppSelector(store => store.auth);\n  return (\n    <div className=\"sLaptop:flex sLaptop:justify-between sLaptop:pr-[120px] sLaptop:pl-[16px]\">\n      {width >= 1280 && (\n        <div className=\"hidden sLaptop:block sLaptop:h-full\">\n          <img\n            className=\"h-full w-full\"\n            src={authDesktop1x}\n            srcSet={`${authDesktop1x} 1x, ${authDesktop2x} 2x`}\n            alt=\"Welcome. Parent and kids make homework together\"\n            width={580}\n          />\n        </div>\n      )}\n      <div className=\"sLaptop:mt-[20px]\">\n        <h2 className=\"mb-[32px] text-center text-[18px] font-semibold text-main-color sTablet:text-[28px] sLaptop:text-left\">\n          {text[lang].makeTasks}\n          <br /> {text[lang].getAwards}\n        </h2>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default AuthContent;\n","//  FormTextField.tsx\nimport { useMemo, useState } from 'react';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { IFormTextField } from '../../types/formTextField-types';\n\nconst FormTextField: React.FC<IFormTextField> = ({\n  label,\n  error,\n  name,\n  value,\n  onChange,\n  required = true,\n  type,\n  placeholder = ' ',\n  title,\n  pattern,\n  minLength = 3,\n  maxLength = 40,\n  helper,\n}) => {\n  const id = useMemo(() => nanoid(), []);\n  const [isFocused, setIsFocused] = useState<boolean>(false);\n\n  const handleFocus = () => {\n    setIsFocused(true);\n  };\n\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n\n  return (\n    <div className=\"relative  mb-[12px]\">\n      <input\n        className=\"input\"\n        id={id}\n        name={name}\n        value={value}\n        onChange={onChange}\n        required={required}\n        placeholder={placeholder}\n        type={type}\n        title={title}\n        pattern={pattern}\n        minLength={minLength}\n        maxLength={maxLength}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n      />\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <span className=\"error\">{!isFocused && error}</span>\n      <span className=\"helper\">{helper}</span>\n    </div>\n  );\n};\n\nexport default FormTextField;\n","import sprite from '../../assets/icons/sprite.svg';\nimport { useAppSelector } from '../../redux/hooks';\nimport text from './text.json';\n\nconst { REACT_APP_BACKEND_URL } = process.env;\n\nconst SocialAuth: React.FC = () => {\n  const { lang } = useAppSelector(store => store.auth);\n  return (\n    <div className=\"mb-[20px]\">\n      <h3 className=\"mb-[20px] text-xs font-normal text-second-color\">{text[lang].socialAuth}</h3>\n      <div className=\"flex justify-between\">\n        <a\n          href={`${REACT_APP_BACKEND_URL}/auth/google`}\n          className=\" flex h-[42px] w-[45%] items-center justify-center rounded-[6px] border-gray-300 shadow-base hover:bg-accent-color\"\n          aria-label=\"Authorization with Google Account\"\n        >\n          <svg width=\"85\" height=\"20\">\n            <use href={sprite + '#google'}></use>\n          </svg>\n        </a>\n        <a\n          href={`${REACT_APP_BACKEND_URL}/auth/facebook`}\n          className=\" flex h-[42px] w-[45%] items-center justify-center rounded-[6px] border-gray-300 shadow-base hover:bg-accent-color\"\n          aria-label=\"Authorization with Facebook Account\"\n        >\n          <svg width=\"85\" height=\"20\">\n            <use href={sprite + '#facebook'}></use>\n          </svg>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default SocialAuth;\n","import React, { useState } from 'react';\nimport { handleLogin } from '../../redux/auth/auth-operations';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport FormTextField from '../FormTextField/FormTextField';\nimport text from './text.json';\n\ninterface IState {\n  email: string;\n  password: string;\n}\n\nconst initialState = {\n  email: '',\n  password: '',\n};\n\nconst LoginForm: React.FC = () => {\n  const [state, setState] = useState<IState>(initialState);\n  const [validationErrors, setValidationErrors] = useState<IState>(initialState);\n  const { lang } = useAppSelector(store => store.auth);\n  const dispatch = useAppDispatch();\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\n    const { value, name, validationMessage } = e.target;\n    setValidationErrors(prevState => ({\n      ...prevState,\n      [name]: validationMessage,\n    }));\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleAuth = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    dispatch(handleLogin(state));\n    setState(initialState);\n  };\n\n  const { email, password } = state;\n\n  return (\n    <form onSubmit={handleAuth}>\n      <h3 className=\"mb-[20px] text-[12px] font-normal text-second-color\">{text[lang].notSocialAuth}</h3>\n      <FormTextField\n        onChange={handleChange}\n        value={email}\n        name=\"email\"\n        type=\"email\"\n        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n        error={validationErrors.email}\n        helper=\"example@gmail.com\"\n        title=\"example@gmail.com\"\n        label={text[lang].emailLabel}\n      />\n      <FormTextField\n        onChange={handleChange}\n        value={password}\n        name=\"password\"\n        type=\"password\"\n        minLength={8}\n        error={validationErrors.password}\n        helper={text[lang].passwordHelper}\n        title={text[lang].passwordTitle}\n        label={text[lang].passwordLabel}\n      />\n      <div className=\"flex justify-center\">\n        <button type=\"submit\" className=\"btn w-full\">\n          {text[lang].comeIn}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from '../../components/LoginForm/LoginForm';\nimport Container from '../../components/Container/Container';\nimport AuthContent from '../../components/AuthContent/AuthContent';\nimport SocialAuth from '../../components/SocialAuth/SocialAuth';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks';\nimport { clearRedirectToLogin } from '../../redux/auth/auth-slice';\nimport { useEffect } from 'react';\n\nconst LoginPage: React.FC = () => {\n  const { redirectToLogin } = useAppSelector(store => store.auth);\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    if (redirectToLogin) {\n      dispatch(clearRedirectToLogin());\n    }\n  }, [dispatch, redirectToLogin]);\n\n  return (\n    <section className=\"min-h-[calc(100vh-130px)] w-full py-[40px] sTablet:min-h-[calc(100vh-335px)] sLaptop:min-h-[calc(100vh-64px)] sLaptop:pb-0 sLaptop:pt-[20px]\">\n      <Container>\n        <AuthContent>\n          <div className=\"sTablet:mx-auto sTablet:w-[394px] sTablet:px-[32px] sTablet:py-[40px] sTablet:shadow-base \">\n            <SocialAuth />\n            <LoginForm />\n          </div>\n        </AuthContent>\n      </Container>\n    </section>\n  );\n};\n\nexport default LoginPage;\n"],"names":["children","width","useWindowDimensions","lang","useAppSelector","store","auth","className","src","authDesktop1x","srcSet","authDesktop2x","alt","text","makeTasks","getAwards","label","error","name","value","onChange","required","type","placeholder","title","pattern","minLength","maxLength","helper","id","useMemo","nanoid","useState","isFocused","setIsFocused","onFocus","onBlur","htmlFor","REACT_APP_BACKEND_URL","process","socialAuth","href","height","sprite","initialState","email","password","state","setState","validationErrors","setValidationErrors","dispatch","useAppDispatch","handleChange","e","target","validationMessage","prevState","onSubmit","preventDefault","handleLogin","notSocialAuth","FormTextField","emailLabel","passwordHelper","passwordTitle","passwordLabel","comeIn","redirectToLogin","useEffect","clearRedirectToLogin","Container","AuthContent","SocialAuth"],"sourceRoot":""}